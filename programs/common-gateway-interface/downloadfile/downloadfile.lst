     1                                  ; Name:        cgi-download.asm
     2                                  ; Build:  see makefile
     3                                  ; Description: cgi program to download a file (logo.png in this example).
     4                                  ; If you should see errors instead of a download window check if fastcgi is enabled on your apache server.
     5                                  ; appearantle mod-cgi alone isn't enough to serve this program
     6                                  ; sudo apt-get install libapache2-mod-fastcgi
     7                                  ; sudo a2enmod fastcgi
     8                                  ; sudo service apache2 restart
     9                                  
   493                                  [list -]
   494                                  
   495                                  bits 64
   496                                  
   497                                  section .bss
   498 00000000 <res 00000008>               memalloc:      resq 1    ; pointer to memory break
   499 00000008 <res 00000008>               fd:            resq 1    ; filedescriptor
   500                                        
   501                                  section .data
   502                                  
   503 00000000 436F6E74656E742D74-          httpheader:         db   'Content-type: application/octet-stream', 10
   504 00000009 7970653A206170706C-
   505 00000012 69636174696F6E2F6F-
   506 0000001B 637465742D73747265-
   507 00000024 616D0A             
   508 00000027 436F6E74656E742D44-                              db   'Content-Disposition: attachment; filename="logo.png"', 10, 10
   509 00000030 6973706F736974696F-
   510 00000039 6E3A20617474616368-
   511 00000042 6D656E743B2066696C-
   512 0000004B 656E616D653D226C6F-
   513 00000054 676F2E706E67220A0A 
   514                                       .length:            equ  $-httpheader
   515 0000005D 436F6E74656E742D74-          response:           db   'Content-type: text/html', 10, 10
   516 00000066 7970653A2074657874-
   517 0000006F 2F68746D6C0A0A     
   518 00000076 3C7370616E3E746865-                              db   '<span>the file was not found</span>', 10
   519 0000007F 2066696C6520776173-
   520 00000088 206E6F7420666F756E-
   521 00000091 643C2F7370616E3E0A 
   522                                       .length:            equ  $-response
   523 0000009A 646F776E6C6F616473-          filename:           db   'downloads/logo.png',0    ; put it wherever you want, just keep track of the right location in your path
   524 000000A3 2F6C6F676F2E706E67-
   525 000000AC 00                 
   526 000000AD 5B646F776E6C6F6164-          errorfile:          db   '[downloadfile] $[CGIROOT]/downloads/logo.png not found error', 10
   527 000000B6 66696C655D20245B43-
   528 000000BF 4749524F4F545D2F64-
   529 000000C8 6F776E6C6F6164732F-
   530 000000D1 6C6F676F2E706E6720-
   531 000000DA 6E6F7420666F756E64-
   532 000000E3 206572726F720A     
   533                                       .length:            equ  $-errorfile
   534 000000EA 5B646F776E6C6F6164-          errorNoMemory:      db   '[downloadfile error] out of memory error', 10     ; this message will be written to the Apache error log
   535 000000F3 66696C65206572726F-
   536 000000FC 725D206F7574206F66-
   537 00000105 206D656D6F72792065-
   538 0000010E 72726F720A         
   539                                       .length:            equ  $-errorNoMemory
   540                                       
   541                                       STAT stat      ; STAT structure instance for FSTAT syscall in fileio.inc
   542                              <1>  %1:
   543                              <1>  ISTRUC STAT_STRUC
   544 00000113 0000000000000000    <1>  at STAT_STRUC.st_dev, dq 0
   545 0000011B 0000000000000000    <1>  at STAT_STRUC.st_ino, dq 0
   546 00000123 0000000000000000    <1>  at STAT_STRUC.st_nlink, dq 0
   547 0000012B 00000000            <1>  at STAT_STRUC.st_mod, dd 0
   548 0000012F 00000000            <1>  at STAT_STRUC.st_uid, dd 0
   549 00000133 00000000            <1>  at STAT_STRUC.st_gid, dd 0
   550 00000137 0000000000000000    <1>  at STAT_STRUC.st_rdev, dq 0
   551 0000013F 00000000            <1>  at STAT_STRUC._pad1, dd 0
   552 00000143 0000000000000000    <1>  at STAT_STRUC.st_size, dq 0
   553 0000014B 00000000            <1>  at STAT_STRUC.st_blksize, dd 0
   554 0000014F 00000000            <1>  at STAT_STRUC._pad2, dd 0
   555 00000153 0000000000000000    <1>  at STAT_STRUC.st_blocks, dq 0
   556 0000015B 0000000000000000    <1>  at STAT_STRUC.st_atime, dq 0
   557 00000163 0000000000000000    <1>  at STAT_STRUC.st_atime_nsec, dq 0
   558 0000016B 0000000000000000    <1>  at STAT_STRUC.st_mtime, dq 0
   559 00000173 0000000000000000    <1>  at STAT_STRUC.st_mtime_nsec, dq 0
   560 0000017B 0000000000000000    <1>  at STAT_STRUC.st_ctime, dq 0
   561 00000183 0000000000000000    <1>  at STAT_STRUC.st_ctime_nsec, dq 0
   562 0000018B 0000000000000000    <1>  at STAT_STRUC._unused1, dq 0
   563 00000193 0000000000000000    <1>  at STAT_STRUC._unused2, dq 0
   564 0000019B 0000000000000000    <1>  at STAT_STRUC._unused3, dq 0
   565                              <1>  IEND
   566                              <1> 
   567                              <1> 
   568                              <1> 
   569                              <1>  %define %1.st_dev %1+STAT_STRUC.st_dev
   570                              <1>  %define %1.st_ino %1+STAT_STRUC.st_ino
   571                              <1>  %define %1.st_nlink %1+STAT_STRUC.st_nlink
   572                              <1>  %define %1.st_mod %1+STAT_STRUC.st_mod
   573                              <1>  %define %1.st_uid %1+STAT_STRUC.st_uid
   574                              <1>  %define %1.st_gid %1+STAT_STRUC.st_gid
   575                              <1>  %define %1.st_rdev %1+STAT_STRUC.st_rdev
   576                              <1>  %define %1._pad1 %1+STAT_STRUC._pad1
   577                              <1>  %define %1.st_size %1+STAT_STRUC.st_size
   578                              <1>  %define %1.st_blksize %1+STAT_STRUC.st_blksize
   579                              <1>  %define %1._pad2 %1+STAT_STRUC._pad2
   580                              <1>  %define %1.st_blocks %1+STAT_STRUC.st_blocks
   581                              <1>  %define %1.st_atime %1+STAT_STRUC.st_atime
   582                              <1>  %define %1.st_atime_nsec %1+STAT_STRUC.st_atime_nsec
   583                              <1>  %define %1.st_mtime %1+STAT_STRUC.st_mtime
   584                              <1>  %define %1.st_mtime_nsec %1+STAT_STRUC.st_mtime_nsec
   585                              <1>  %define %1.st_ctime %1+STAT_STRUC.st_ctime
   586                              <1>  %define %1.st_ctime_nsec %1+STAT_STRUC.st_ctime_nsec
   587                              <1>  %define %1._unused1 %1+STAT_STRUC._unused1
   588                              <1>  %define %1._unused2 %1+STAT_STRUC._unused2
   589                              <1>  %define %1._unused3 %1+STAT_STRUC._unused3
   590                                         
   591                                  section .text
   592                                       global _start
   593                                       
   594                                  _start:
   595                                       
   596                                       ; open the file and get filedescriptor
   597 00000000 48BF-                        mov       rdi, filename
   598 00000002 [9A00000000000000] 
   599 0000000A BE00000000                   mov       rsi, O_RDONLY
   600 0000000F B802000000                   mov       rax, SYS_OPEN
   601 00000014 0F05                         syscall
   602 00000016 4883F800                     cmp       rax, 0
   603 0000001A 0F8CE9000000                 jl        error                         ; Error, file doesn't exists
   604 00000020 48890425[08000000]           mov       QWORD[fd], rax                ; save filedescriptor
   605                                            
   606                                       ; read the filesize
   607 00000028 488B3C25[08000000]           mov       rdi, QWORD[fd]
   608 00000030 48BE-                        mov       rsi, stat
   609 00000032 [1301000000000000] 
   610 0000003A B805000000                   mov       rax, SYS_FSTAT
   611 0000003F 0F05                         syscall
   612                                            
   613                                       ; get memory break
   614 00000041 BF00000000                   mov       rdi, 0
   615 00000046 B80C000000                   mov       rax, SYS_BRK
   616 0000004B 0F05                         syscall
   617                                            
   618 0000004D 4883F800                     cmp       rax, 0
   619 00000051 0F8EA1000000                 jle       errormemory                   ; no memory available to allocate
   620                                            
   621 00000057 48890425[00000000]           mov       QWORD[memalloc], rax          ; save pointer to memory break
   622 0000005F 48030425[43010000]           add       rax, QWORD[stat.st_size]      ; add filesize to allocate memory
   623                                            
   624                                       ; try to allocate additional memory
   625 00000067 4889C7                       mov       rdi, rax
   626 0000006A B80C000000                   mov       rax, SYS_BRK
   627 0000006F 0F05                         syscall
   628 00000071 4839F8                       cmp       rax, rdi                      ; new memory break equal to calculated one?
   629 00000074 0F858F000000                 jne       error                         ; not enough memory available
   630                                                 
   631                                            ; read the file in the allocated memory
   632 0000007A 488B3C25[08000000]           mov       rdi, QWORD[fd]
   633 00000082 488B3425[00000000]           mov       rsi, QWORD[memalloc]
   634 0000008A 488B1425[43010000]           mov       rdx, QWORD[stat.st_size] ; bytes to read
   635 00000092 B800000000                   mov       rax, SYS_READ
   636 00000097 0F05                         syscall
   637                                  
   638                                       ; close the file
   639 00000099 488B3C25[08000000]           mov       rdi, QWORD[fd]
   640 000000A1 B803000000                   mov       rax, SYS_CLOSE
   641 000000A6 0F05                         syscall
   642                                  
   643                                       ; write the HTTP header
   644 000000A8 BF01000000                   mov       rdi, STDOUT
   645 000000AD 48BE-                        mov       rsi, httpheader
   646 000000AF [0000000000000000] 
   647 000000B7 BA5D000000                   mov       rdx, httpheader.length
   648 000000BC B801000000                   mov       rax, SYS_WRITE
   649 000000C1 0F05                         syscall
   650                                       ; write the filecontents
   651 000000C3 BF01000000                   mov       rdi, STDOUT
   652 000000C8 488B3425[00000000]           mov       rsi, QWORD[memalloc]
   653 000000D0 488B1425[43010000]           mov       rdx, QWORD[stat.st_size]
   654 000000D8 B801000000                   mov       rax, SYS_WRITE
   655 000000DD 0F05                         syscall
   656                                            
   657                                       ; release allocated memory
   658 000000DF 488B3C25[00000000]           mov       rdi, QWORD[memalloc]
   659 000000E7 B80C000000                   mov       rax, SYS_BRK
   660 000000EC 0F05                         syscall
   661                                  exit:
   662                                       ; exit the program
   663 000000EE 4831FF                       xor       rdi, rdi
   664 000000F1 B83C000000                   mov       rax, SYS_EXIT
   665 000000F6 0F05                         syscall
   666                                  
   667                                  errormemory:
   668 000000F8 48BE-                        mov       rsi, errorNoMemory
   669 000000FA [EA00000000000000] 
   670 00000102 BA29000000                   mov       rdx, errorNoMemory.length
   671 00000107 EB2A                         jmp       error.tologfile
   672                                  error:
   673 00000109 48BE-                        mov       rsi, response
   674 0000010B [5D00000000000000] 
   675 00000113 BA3D000000                   mov       rdx, response.length
   676 00000118 BF01000000                   mov       rdi, STDOUT                        ; to web client
   677 0000011D B801000000                   mov       rax, SYS_WRITE
   678 00000122 0F05                         syscall
   679 00000124 48BE-                        mov       rsi, errorfile
   680 00000126 [AD00000000000000] 
   681 0000012E BA3D000000                   mov       rdx, errorfile.length
   682                                  .tologfile:     
   683 00000133 BF02000000                   mov       rdi, STDERR                        ; to Apache log file
   684 00000138 B801000000                   mov       rax, SYS_WRITE
   685 0000013D 0F05                         syscall
   686 0000013F EBAD                         jmp       exit
